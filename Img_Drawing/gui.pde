/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void imgButton1_click1(GImageButton source, GEvent event) { //_CODE_:imgButton1:792696:
  println("imgButton1 - GImageButton >> GEvent." + event + " @ " + millis());
} //_CODE_:imgButton1:792696:

public void slider1_change1(GSlider source, GEvent event) { //_CODE_:slider1:715724:
  println("slider1 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:slider1:715724:

public void slider2_change1(GSlider source, GEvent event) { //_CODE_:slider2:793198:
  println("slider2 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:slider2:793198:

public void checkbox1_clicked1(GCheckbox source, GEvent event) { //_CODE_:checkbox1:870503:
  println("checkbox1 - GCheckbox >> GEvent." + event + " @ " + millis());
} //_CODE_:checkbox1:870503:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  imgButton1 = new GImageButton(this, 16, 13, 287, 310, new String[] { "", "", "" } );
  imgButton1.addEventHandler(this, "imgButton1_click1");
  slider1 = new GSlider(this, 320, 32, 100, 40, 10.0);
  slider1.setLimits(0.5, 0.0, 1.0);
  slider1.setNumberFormat(G4P.DECIMAL, 2);
  slider1.setOpaque(false);
  slider1.addEventHandler(this, "slider1_change1");
  slider2 = new GSlider(this, 320, 99, 100, 40, 10.0);
  slider2.setLimits(0.5, 0.0, 1.0);
  slider2.setNumberFormat(G4P.DECIMAL, 2);
  slider2.setOpaque(false);
  slider2.addEventHandler(this, "slider2_change1");
  label1 = new GLabel(this, 325, 12, 80, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("My label");
  label1.setOpaque(false);
  label2 = new GLabel(this, 328, 78, 80, 20);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("My label");
  label2.setOpaque(false);
  sketchPad1 = new GSketchPad(this, 178, 155, 80, 60);
  checkbox1 = new GCheckbox(this, 322, 150, 120, 20);
  checkbox1.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  checkbox1.setText("checkbox text");
  checkbox1.setOpaque(false);
  checkbox1.addEventHandler(this, "checkbox1_clicked1");
  sketchPad2 = new GSketchPad(this, 178, 155, 80, 60);
  sketchPad3 = new GSketchPad(this, 178, 155, 80, 60);
}

// Variable declarations 
// autogenerated do not edit
GImageButton imgButton1; 
GSlider slider1; 
GSlider slider2; 
GLabel label1; 
GLabel label2; 
GSketchPad sketchPad1; 
GCheckbox checkbox1; 
GSketchPad sketchPad2; 
GSketchPad sketchPad3; 